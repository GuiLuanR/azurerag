name: Trigger auto deployment for demo-container

env:
  AZURE_CONTAINER_APP_NAME: demo-container
  AZURE_GROUP_NAME: demo-container
  REGISTRY_TYPE: ghcr # Change this to 'acr' or 'dockerhub' to switch registries
  DOCKERHUB_USERNAME: stranger69
  ACR_LOGIN_SERVER: democontainerregistry69.azurecr.io

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2
        
      - name: Debug Variables
        run: |
          echo "GITHUB REPOSITORY: ${{ github.repository }}"
          echo "GITHUB SHA: ${{ github.sha }}"
          echo "GITHUB REPOSITORY OWNER: ${{ github.repository_owner }}"
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to selected container registry
        if: env.REGISTRY_TYPE == 'ghcr'
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: env.REGISTRY_TYPE == 'dockerhub'
        uses: docker/login-action@v1.10.0
        with:
          registry: docker.io
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push container image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.REGISTRY_TYPE == 'ghcr' && 'ghcr.io/${{ github.repository }}:${{ github.sha }}' || '' }}
            ${{ env.REGISTRY_TYPE == 'dockerhub' && '${{ secrets.DOCKERHUB_USERNAME }}/${{ env.AZURE_CONTAINER_APP_NAME }}:${{ github.sha }}' || '' }}
            ${{ env.REGISTRY_TYPE == 'acr' && '${{ env.ACR_LOGIN_SERVER }}/${{ env.AZURE_CONTAINER_APP_NAME }}:${{ github.sha }}' || '' }}
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container App
        run: |
          # Set image name based on registry type
          if [ "${{ env.REGISTRY_TYPE }}" = "ghcr" ]; then
            IMAGE="ghcr.io/${{ github.repository }}:${{ github.sha }}"
            REGISTRY="ghcr.io"
            USERNAME="${{ github.actor }}"
            PASSWORD="${{ secrets.GITHUB_TOKEN }}"
          elif [ "${{ env.REGISTRY_TYPE }}" = "dockerhub" ]; then
            IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/${{ env.AZURE_CONTAINER_APP_NAME }}:${{ github.sha }}"
            REGISTRY="docker.io"
            USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
            PASSWORD="${{ secrets.DOCKERHUB_PASSWORD }}"
          elif [ "${{ env.REGISTRY_TYPE }}" = "acr" ]; then
            IMAGE="${{ env.ACR_LOGIN_SERVER }}/${{ env.AZURE_CONTAINER_APP_NAME }}:${{ github.sha }}"
            REGISTRY="${{ env.ACR_LOGIN_SERVER }}"
            USERNAME="${{ secrets.ACR_USERNAME }}"
            PASSWORD="${{ secrets.ACR_PASSWORD }}"
          else
            echo "Invalid REGISTRY_TYPE specified!"
            exit 1
          fi

          # Set ACR or container registry in Azure
          az config set extension.use_dynamic_install=yes_without_prompt
          az containerapp registry set -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_GROUP_NAME }} \
            --server $REGISTRY --username $USERNAME --password $PASSWORD

          # Update container image
          az containerapp update -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_GROUP_NAME }} \
            --set-env-vars OPENAI_API_TYPE=azure OPENAI_API_BASE=https://coursera-azure-openai-service.openai.azure.com/ \
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} OPENAI_API_VERSION="2024-02-15-preview" \
            SEARCH_SERVICE_NAME="https://coursera-rag-service.search.windows.net" SEARCH_API_KEY=${{ secrets.SEARCH_SERVICE_API_KEY }} \
            SEARCH_INDEX_NAME="wine-ratings-index-check" \
            --image $IMAGE

          # Optionally update resources (CPU/Memory)
          az containerapp update -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_GROUP_NAME }} --cpu 2 --memory 4Gi
